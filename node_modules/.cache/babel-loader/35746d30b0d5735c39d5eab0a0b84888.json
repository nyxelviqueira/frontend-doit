{"ast":null,"code":"//Llamadas de Usuarios\nexport const registerUserService = async _ref => {\n  let {\n    username,\n    email,\n    password\n  } = _ref;\n  const response = await fetch(`${process.env.REACT_APP_BACKEND}/register`, {\n    method: \"POST\",\n    body: JSON.stringify({\n      username,\n      email,\n      password\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n};\nexport const logInUserService = async _ref2 => {\n  let {\n    email,\n    password\n  } = _ref2;\n  const response = await fetch(`${process.env.REACT_APP_BACKEND}/login`, {\n    method: \"POST\",\n    body: JSON.stringify({\n      email,\n      password\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n\n  return json.data;\n};\nexport const getMyUserDataService = async token => {\n  const response = await fetch(`${process.env.REACT_APP_BACKEND}/users`, {\n    headers: {\n      Authorization: token\n    }\n  });\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n\n  return json.data;\n};\nexport const getUserDataService = async id => {\n  const response = await fetch(`${process.env.REACT_APP_BACKEND}/users/${id}`);\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n\n  return json.data;\n};\nexport const editUserService = async _ref3 => {\n  let {\n    data,\n    token\n  } = _ref3;\n  const response = await fetch(`${process.env.REACT_APP_BACKEND}/users`, {\n    method: \"PUT\",\n    body: data,\n    headers: {\n      Authorization: token\n    }\n  });\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n\n  return json.data;\n}; //Llamadas de servicios\n\nexport const sendNewService = async _ref4 => {\n  let {\n    data,\n    token\n  } = _ref4;\n  const response = await fetch(`${process.env.REACT_APP_BACKEND}/newservice`, {\n    method: \"POST\",\n    body: data,\n    headers: {\n      Authorization: token\n    }\n  });\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n\n  return json.data;\n};\nexport const getSingleService = async id => {\n  const response = await fetch(`${process.env.REACT_APP_BACKEND}/services/${id}`);\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n\n  return json.data;\n};\nexport const getAllServicesService = async () => {\n  const response = await fetch(`${process.env.REACT_APP_BACKEND}/services`);\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n\n  return json.data;\n}; //Llamadas de replies\n\nexport const sendRepliesService = async _ref5 => {\n  let {\n    data,\n    token,\n    id\n  } = _ref5;\n  const response = await fetch(`${process.env.REACT_APP_BACKEND}/services/${id}`, {\n    method: \"POST\",\n    body: data,\n    headers: {\n      Authorization: token\n    }\n  });\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n\n  return json.data;\n};\nexport const getRepliesServiceService = async () => {\n  const response = await fetch(`${process.env.REACT_APP_BACKEND}/replies/`);\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n\n  return json.data;\n};","map":{"version":3,"names":["registerUserService","username","email","password","response","fetch","process","env","REACT_APP_BACKEND","method","body","JSON","stringify","headers","json","ok","Error","message","logInUserService","data","getMyUserDataService","token","Authorization","getUserDataService","id","editUserService","sendNewService","getSingleService","getAllServicesService","sendRepliesService","getRepliesServiceService"],"sources":["/home/nyxel/Documentos/Hackaboss/mi-carpeta/4.proyectos/5.Proyecto-git/frontend-needsportal/src/services/index.jsx"],"sourcesContent":["//Llamadas de Usuarios\n\nexport const registerUserService = async ({ username, email, password }) => {\n  const response = await fetch(`${process.env.REACT_APP_BACKEND}/register`, {\n    method: \"POST\",\n    body: JSON.stringify({ username, email, password }),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n};\n\nexport const logInUserService = async ({ email, password }) => {\n  const response = await fetch(`${process.env.REACT_APP_BACKEND}/login`, {\n    method: \"POST\",\n    body: JSON.stringify({ email, password }),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n\n  return json.data;\n};\n\nexport const getMyUserDataService = async (token) => {\n  const response = await fetch(`${process.env.REACT_APP_BACKEND}/users`, {\n    headers: {\n      Authorization: token,\n    },\n  });\n\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n\n  return json.data;\n};\n\nexport const getUserDataService = async (id) => {\n  const response = await fetch(`${process.env.REACT_APP_BACKEND}/users/${id}`);\n\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n\n  return json.data;\n};\n\nexport const editUserService = async ({ data, token }) => {\n  const response = await fetch(`${process.env.REACT_APP_BACKEND}/users`, {\n    method: \"PUT\",\n    body: data,\n    headers: {\n      Authorization: token,\n    },\n  });\n\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n  return json.data;\n};\n\n//Llamadas de servicios\n\nexport const sendNewService = async ({ data, token }) => {\n  const response = await fetch(`${process.env.REACT_APP_BACKEND}/newservice`, {\n    method: \"POST\",\n    body: data,\n    headers: {\n      Authorization: token,\n    },\n  });\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n  return json.data;\n};\n\nexport const getSingleService = async (id) => {\n  const response = await fetch(\n    `${process.env.REACT_APP_BACKEND}/services/${id}`\n  );\n\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n\n  return json.data;\n};\n\nexport const getAllServicesService = async () => {\n  const response = await fetch(`${process.env.REACT_APP_BACKEND}/services`);\n\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n\n  return json.data;\n};\n\n//Llamadas de replies\n\nexport const sendRepliesService = async ({ data, token, id }) => {\n  const response = await fetch(\n    `${process.env.REACT_APP_BACKEND}/services/${id}`,\n    {\n      method: \"POST\",\n      body: data,\n      headers: {\n        Authorization: token,\n      },\n    }\n  );\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n  return json.data;\n};\n\nexport const getRepliesServiceService = async () => {\n  const response = await fetch(\n    `${process.env.REACT_APP_BACKEND}/replies/`\n  );\n\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n  return json.data;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}