{"ast":null,"code":"export const getAllServicesService = async () => {\n  const response = await fetch(`${process.env.REACT_APP_BACKEND}/services`);\n  const json = await response.json();\n  console.log(json.data);\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n\n  return json.data;\n};\nexport const registerUserService = async _ref => {\n  let {\n    username,\n    email,\n    password\n  } = _ref;\n  const response = await fetch(`${process.env.REACT_APP_BACKEND}/register`, {\n    method: \"POST\",\n    body: JSON.stringify({\n      username,\n      email,\n      password\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    log\n  });\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n};\nexport const getUserDataService = async id => {\n  const response = await fetch(`${process.env.REACT_APP_BACKEND}/profiles/${id}`);\n  const json = await response.json();\n  console.log(\"hola\");\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n\n  return json.data;\n};","map":{"version":3,"names":["getAllServicesService","response","fetch","process","env","REACT_APP_BACKEND","json","console","log","data","ok","Error","message","registerUserService","username","email","password","method","body","JSON","stringify","headers","getUserDataService","id"],"sources":["/home/nyxel/Documentos/Hackaboss/mi-carpeta/4.proyectos/5.Proyecto-git/frontend-needsportal/src/services/index.jsx"],"sourcesContent":["export const getAllServicesService = async () => {\n    const response = await fetch(`${process.env.REACT_APP_BACKEND}/services`);\n\n    const json = await response.json();\n\n    console.log(json.data);\n    if (!response.ok) {\n        throw new Error(json.message);\n    }\n\n    return json.data;\n\n};\n\n\nexport const registerUserService = async ({ username, email, password }) => {\n    const response = await fetch(`${process.env.REACT_APP_BACKEND}/register`, {\n        method: \"POST\",\n        body: JSON.stringify({ username, email, password }),\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n\n        log\n    }); const json = await response.json();\n\n    if (!response.ok) {\n        throw new Error(json.message);\n    }\n};\n\nexport const getUserDataService = async (id) => {\n    const response = await fetch(`${process.env.REACT_APP_BACKEND}/profiles/${id}`);\n\n    const json = await response.json();\n\n    console.log(\"hola\");\n\n    if (!response.ok) {\n        throw new Error(json.message);\n    }\n\n    return json.data;\n};"],"mappings":"AAAA,OAAO,MAAMA,qBAAqB,GAAG,YAAY;EAC7C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,WAAlC,CAA5B;EAEA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACK,IAAT,EAAnB;EAEAC,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,IAAjB;;EACA,IAAI,CAACR,QAAQ,CAACS,EAAd,EAAkB;IACd,MAAM,IAAIC,KAAJ,CAAUL,IAAI,CAACM,OAAf,CAAN;EACH;;EAED,OAAON,IAAI,CAACG,IAAZ;AAEH,CAZM;AAeP,OAAO,MAAMI,mBAAmB,GAAG,cAAyC;EAAA,IAAlC;IAAEC,QAAF;IAAYC,KAAZ;IAAmBC;EAAnB,CAAkC;EACxE,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,WAAlC,EAA8C;IACtEY,MAAM,EAAE,MAD8D;IAEtEC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MAAEN,QAAF;MAAYC,KAAZ;MAAmBC;IAAnB,CAAf,CAFgE;IAGtEK,OAAO,EAAE;MACL,gBAAgB;IADX,CAH6D;IAOtEb;EAPsE,CAA9C,CAA5B;EAQI,MAAMF,IAAI,GAAG,MAAML,QAAQ,CAACK,IAAT,EAAnB;;EAEJ,IAAI,CAACL,QAAQ,CAACS,EAAd,EAAkB;IACd,MAAM,IAAIC,KAAJ,CAAUL,IAAI,CAACM,OAAf,CAAN;EACH;AACJ,CAdM;AAgBP,OAAO,MAAMU,kBAAkB,GAAG,MAAOC,EAAP,IAAc;EAC5C,MAAMtB,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,aAAYkB,EAAG,EAAjD,CAA5B;EAEA,MAAMjB,IAAI,GAAG,MAAML,QAAQ,CAACK,IAAT,EAAnB;EAEAC,OAAO,CAACC,GAAR,CAAY,MAAZ;;EAEA,IAAI,CAACP,QAAQ,CAACS,EAAd,EAAkB;IACd,MAAM,IAAIC,KAAJ,CAAUL,IAAI,CAACM,OAAf,CAAN;EACH;;EAED,OAAON,IAAI,CAACG,IAAZ;AACH,CAZM"},"metadata":{},"sourceType":"module"}