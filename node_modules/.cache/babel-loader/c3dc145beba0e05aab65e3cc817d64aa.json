{"ast":null,"code":"//Llamadas de Usuarios\nexport const registerUserService = async _ref => {\n  let {\n    username,\n    email,\n    password\n  } = _ref;\n  const response = await fetch(`${process.env.REACT_APP_BACKEND}/register`, {\n    method: \"POST\",\n    body: JSON.stringify({\n      username,\n      email,\n      password\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n};\nexport const getAllServicesService = async () => {\n  const response = await fetch(`${process.env.REACT_APP_BACKEND}/services`);\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n\n  return json.data;\n};\nexport const logInUserService = async _ref2 => {\n  let {\n    email,\n    password\n  } = _ref2;\n  const response = await fetch(`${process.env.REACT_APP_BACKEND}/login`, {\n    method: \"POST\",\n    body: JSON.stringify({\n      email,\n      password\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n\n  return json.data;\n};\nexport const getMyUserDataService = async token => {\n  const response = await fetch(`${process.env.REACT_APP_BACKEND}/users`, {\n    headers: {\n      Authorization: token\n    }\n  });\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n\n  return json.data;\n};\nexport const getUserDataService = async id => {\n  const response = await fetch(`${process.env.REACT_APP_BACKEND}/users/${id}`);\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n\n  return json.data;\n};\nexport const getSingleService = async id => {\n  const response = await fetch(`${process.env.REACT_APP_BACKEND}/services/${id}`);\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n\n  return json.data;\n};\nexport const sendNewService = async _ref3 => {\n  let {\n    data,\n    token\n  } = _ref3;\n  const response = await fetch(`${process.env.REACT_APP_BACKEND}/newservice`, {\n    method: 'POST',\n    body: data,\n    headers: {\n      Authorization: token\n    }\n  });\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n\n  return json.data;\n}; //Esto lo uso para editar usuario\n\nexport const editUserService = async _ref4 => {\n  let {\n    data,\n    token\n  } = _ref4;\n  const response = await fetch(`${process.env.REACT_APP_BACKEND}/users`, {\n    method: 'PUT',\n    body: data,\n    headers: {\n      Authorization: token\n    }\n  });\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n\n  return json.data;\n}; //Llamada a backend para contestar al servicio\n\nexport const getRepliesServiceService = async id => {\n  const response = await fetch(`${process.env.REACT_APP_BACKEND}/replies/${id}`);\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n\n  return json.data;\n};","map":{"version":3,"names":["registerUserService","username","email","password","response","fetch","process","env","REACT_APP_BACKEND","method","body","JSON","stringify","headers","json","ok","Error","message","getAllServicesService","data","logInUserService","getMyUserDataService","token","Authorization","getUserDataService","id","getSingleService","sendNewService","editUserService","getRepliesServiceService"],"sources":["/home/nyxel/Documentos/Hackaboss/mi-carpeta/4.proyectos/5.Proyecto-git/frontend-needsportal/src/services/index.jsx"],"sourcesContent":["//Llamadas de Usuarios\n\n\n\n\nexport const registerUserService = async ({ username, email, password }) => {\n    const response = await fetch(`${process.env.REACT_APP_BACKEND}/register`, {\n        method: \"POST\",\n        body: JSON.stringify({ username, email, password }),\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n    }); const json = await response.json();\n\n    if (!response.ok) {\n        throw new Error(json.message);\n    }\n};\n\n\n\nexport const getAllServicesService = async () => {\n\n    const response = await fetch(`${process.env.REACT_APP_BACKEND}/services`);\n\n    const json = await response.json();\n\n    if (!response.ok) {\n        throw new Error(json.message);\n    }\n\n    return json.data;\n\n\n\n};\n\n\nexport const logInUserService = async ({ email, password }) => {\n    const response = await fetch(`${process.env.REACT_APP_BACKEND}/login`, {\n        method: \"POST\",\n        body: JSON.stringify({ email, password }),\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n    });\n\n    const json = await response.json();\n\n    if (!response.ok) {\n        throw new Error(json.message);\n    }\n\n    return json.data;\n};\n\nexport const getMyUserDataService = async (token) => {\n    const response = await fetch(`${process.env.REACT_APP_BACKEND}/users`, {\n        headers: {\n            Authorization: token,\n        },\n    });\n\n    const json = await response.json();\n\n    if (!response.ok) {\n        throw new Error(json.message);\n    }\n\n    return json.data;\n};\n\nexport const getUserDataService = async (id) => {\n    const response = await fetch(`${process.env.REACT_APP_BACKEND}/users/${id}`);\n\n    const json = await response.json();\n\n    if (!response.ok) {\n        throw new Error(json.message);\n    }\n\n    return json.data;\n};\n\nexport const getSingleService = async (id) => {\n    const response = await fetch(`${process.env.REACT_APP_BACKEND}/services/${id}`);\n\n    const json = await response.json();\n\n    if (!response.ok) {\n        throw new Error(json.message);\n    }\n\n    return json.data;\n};\n\nexport const sendNewService = async ({ data, token }) => {\n\n\n    const response = await fetch(`${process.env.REACT_APP_BACKEND}/newservice`, {\n        method: 'POST',\n        body: data,\n        headers: {\n            Authorization: token\n        }\n    })\n    const json = await response.json();\n\n\n    if (!response.ok) {\n        throw new Error(json.message);\n    }\n    return json.data;\n}\n\n\n//Esto lo uso para editar usuario\nexport const editUserService = async ({ data, token }) => {\n    const response = await fetch(`${process.env.REACT_APP_BACKEND}/users`, {\n        method: 'PUT',\n        body: data,\n        headers: {\n            Authorization: token\n        }\n    })\n\n    const json = await response.json();\n\n    if (!response.ok) {\n        throw new Error(json.message);\n    }\n    return json.data;\n}\n\n//Llamada a backend para contestar al servicio\nexport const getRepliesServiceService = async (id) => {\n    const response = await fetch(`${process.env.REACT_APP_BACKEND}/replies/${id}`);\n\n    const json = await response.json();\n\n    if (!response.ok) {\n        throw new Error(json.message);\n    }\n    return json.data;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}